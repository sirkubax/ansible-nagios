# Update and install dependent packages.
- name: install nagios' dependent packages
  sudo: true
  apt: pkg={{ item }} state=present force=true update_cache=yes
  with_items: nagios_packages

- name: install legacy packages
  sudo: true
  apt: pkg={{ item }} state=present force=true update_cache=yes
  with_items: nagios_legacy_packages
  when: legacy | default(false)

# Create nagios users and groups.
- name: create nagios group
  sudo: true
  group: >
    gid=3000
    name=nagios

- name: create nagcmd group
  sudo: true
  group: >
    gid=3001
    name=nagcmd

- name: create nagios user
  sudo: true
  user: >
    uid=3000
    group=nagios
    groups=nagcmd
    name=nagios
    home=/usr/local/nagios
    comment="Nagios Admin"

- name: add user www-data to nagcmd group
  sudo: true
  user: >
    groups=nagcmd
    name=www-data

# build and install nagios.
- tasks:
  include: build-nagios.yml

# Build and install nagios check plugins.
- tasks:
  include: build-plugins.yml

# Build and install nagios remote checks.
- tasks:
  include: build-nrpe.yml

# Setup apache.
- tasks:
  include: apache.yml

# Setup pagerduty.
- tasks:
  include: pagerduty.yml
  when: nagios_enable_pagerduty_notifications

# Setup SES for notifications.
- tasks:
  include: ses.yml
  when: nagios_enable_ses_notifications

- name: disable flap detection
  sudo: true
  lineinfile: >
    dest=/usr/local/nagios/etc/nagios.cfg
    line="enable_flap_detection=0"
    regexp="^enable_flap_detection.*$"

- name: overwrite contacts.cfg
  sudo: true
  template: >
    src=contacts.cfg.j2
    dest=/usr/local/nagios/etc/objects/contacts.cfg
    owner=nagios
    group=nagios
    mode=640

#There is nagios upstart script, but it was not enough for me
#- name: install nagios upstart script
#  sudo: true
#  copy: >
#    src=nagios.conf
#    dest=/etc/init/nagios.conf
#    owner=nagios
#    group=nagios
#    mode=640
#
- name: install nagios systemd script
  sudo: true
  template: >
    src=nagios.systemd
    dest=/etc/init.d/nagios4
    owner=nagios
    group=nagios
    mode=755
  tags:
      - etc

- name: install nagios /etc/default/
  sudo: true
  template: >
    src=nagios4_default
    dest=/etc/default/nagios4
    owner=nagios
    group=nagios
    mode=755
  tags:
      - etc

- name: create dir /usr/local/nagios/var/spool/checkresults
  file:
      state: directory
      path: /usr/local/nagios/var/spool/checkresults
      owner: nagios
      group: nagios
  tags:
      - etc

- name: create dir /usr/local/nagios/var/rw
  file:
      state: directory
      path: /usr/local/nagios/var/rw
      owner: nagios
      group: nagios
  tags:
      - etc

- name: chown dir /usr/local/nagios/share/
  file:
      state: directory
      path: /usr/local/nagios/share
      owner: www-data
      group: www-data
  tags:
      - etc

- name: chown /usr/local/nagios/var/rw/nagios.cmd
      state: file
      path: /usr/local/nagios/var/rw/nagios.cmd
      owner: nagios
      group: nagios
  tags:
      - etc

# nagios templates
- tasks:
  include: templates.yml
  tags:
      - templates

- name: restart nagios
  sudo: true
  service: name=nagios4 state=restarted
  notify: restart apache
  tags:
      - etc
